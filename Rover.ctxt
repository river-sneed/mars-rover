#BlueJ class context
comment0.target=Rover
comment0.text=\r\n\ The\ rovers\ rove,\ they\ beep,\ they\ commit\ seppuku\ and\ double\ seppuku\ and\ take\ pictures\ on\ mars.\r\n\r\n\ @author\ (River\ Sneed)\r\n\ @version\ (v3\ 9/25/2018)\r\n
comment1.params=name
comment1.target=Rover(java.lang.String)
comment1.text=\ the\ function\ creates\ a\ rover\ \r\n\ @param\ name\ \ name\ of\ the\ rover\ being\ created\r\n
comment10.params=
comment10.target=void\ takePicture()
comment10.text=\ the\ function\ takes\ a\ picture\ at\ the\ rover's\ location\ so\ long\ as\ the\ memory\ is\ not\ full\r\n\ \r\n
comment11.params=
comment11.target=void\ transmitPictures()
comment11.text=\ the\ function\ transmits\ the\ number\ of\ pictures\ taken\ and\ then\ wipes\ the\ rovers\ onboard\ memory\r\n\ by\ setting\ numPics\ to\ 0\r\n
comment12.params=
comment12.target=void\ die()
comment12.text=\ the\ function\ is\ used\ when\ a\ rover\ dies\ to\ change\ isAlive\ to\ false\ and\ health\ to\ 0\r\n\ \r\n
comment13.params=
comment13.target=void\ zombify()
comment13.text=\ the\ function\ turns\ a\ rover\ into\ a\ zombie\ with\ 0\ health,\ isZombie\ and\ isAlive\ to\ true\r\n\ \r\n
comment14.params=other
comment14.target=void\ kill(Rover)
comment14.text=\ the\ function\ lets\ rover\ kill\ another\ rover\r\n\ @param\ other\ \ the\ rover\ that\ will\ be\ killed\r\n
comment15.params=
comment15.target=void\ seppuku()
comment15.text=\ the\ function\ allows\ a\ rover\ to\ commit\ seppuku;\ a\ form\ of\ japanese\ ritualistic\ suicide\ with\ its\ own\ lazer\r\n\ this\ turns\ the\ rover\ into\ a\ zombie\ if\ it\ is\ alive\r\n
comment16.params=
comment16.target=void\ doubleSeppuku()
comment16.text=\ the\ function\ allows\ a\ rover\ to\ commit\ seppuku;\ a\ form\ of\ japanese\ ritualistic\ suicide\ with\ its\ own\ lazer\r\n\ \r\n
comment17.params=scriptNum\ otherName
comment17.target=void\ deathScript(int,\ java.lang.String)
comment17.text=the\ function\ takes\ in\ a\ scriptNum(ber)\ and\ a\ name\ of\ another\ rover\ (type\ "none"\ if\ not\ appliciable)\ and\ \r\n\ outputs\ a\ script\ based\ on\ the\ inputs\r\n\ \r\n\ @param\ scriptNum\ \ the\ number\ of\ script\r\n\ @param\ otherName\ \ name\ of\ the\ other\ rover\ (if\ it\ is\ involved\ in\ the\ script)\r\n
comment18.params=blank
comment18.target=void\ showDedErr(java.lang.String)
comment18.text=\ the\ function\ creates\ a\ generalized\ error\ message\ for\ when\ the\ rover\ can't\ preform\ actions\ because\ it\ is\ dead\r\n\ \r\n\ @param\ blank\ \ the\ thing\ the\ \r\n
comment19.params=other
comment19.target=void\ attack(Rover)
comment19.text=\ the\ function\ allows\ a\ rover\ to\ attack\ another\ rover\ for\ a\ random\ amount\ of\ integer\ damage\ between\ 0\ and\ 4\r\n\ if\ the\ rover\ kills\ the\ other\ rover,\ the\ other\ rover\ dies\r\n\ if\ the\ other\ rover\ is\ already\ dead\ at\ the\ time\ of\ the\ attack\ the\ attacking\ rover\ is\ also\ made\ into\ a\ zombie\ rover\r\n\ zombie\ rovers\ can\ maul\ non\ zombie\ rovers\ and\ zombify\ them\r\n\ \r\n\ @param\ other\ \ the\ rover\ that\ is\ being\ attacked\r\n
comment2.params=name\ x\ y\ dir
comment2.target=Rover(java.lang.String,\ int,\ int,\ int)
comment2.text=\ the\ function\ creates\ a\ rover\ \r\n\ @param\ name\ \ name\ of\ the\ rover\ being\ created\r\n\ @param\ x\ \ x\ coordinate\ of\ rover\ being\ created\r\n\ @param\ y\ \ y\ coordinate\ of\ rover\ being\ created\r\n\ @param\ dir\ \ direction\ rover\ being\ created\r\n
comment20.params=
comment20.target=java.lang.String\ toString()
comment20.text=\ makes\ the\ tostring\ \r\n\ \r\n
comment3.params=
comment3.target=java.lang.String\ getDirectionName()
comment3.text=\ function\ returns\ cardinal\ direction\ rover\ is\ facing\r\n\ \r\n
comment4.params=x\ y
comment4.target=int\ getDirectionTo(int,\ int)
comment4.text=function\ returns\ the\ direction\ needed\ to\ travel\ towards\ a\ given\ (x,\ y)\ coordinate\r\n\ \r\n\ @param\ x\ \ x\ value\ of\ destination\ coordinate\r\n\ @param\ y\ \ y\ value\ of\ destination\ coordinate\r\n
comment5.params=xMove\ yMove
comment5.target=void\ moveTo(int,\ int)
comment5.text=\ function\ moves\ the\ rover\ to\ a\ given\ (x,\ y)\ coordinate\ in\ the\ most\ efficent\ way\ possible\r\n\ @param\ xMove\ \ x\ coordinate\ the\ rover\ will\ move\ to\r\n\ @param\ yMove\ \ y\ coordinate\ the\ rover\ will\ move\ to\r\n
comment6.params=
comment6.target=void\ goHome()
comment6.text=\ the\ function\ takes\ the\ rover\ to\ its\ home\ coordinates\ using\ the\ moveTo(xHome,\ yHome)\ function\r\n\ then\ it\ outputs\ the\ rover's\ new\ coordinates\r\n
comment7.params=xMove\ yMove
comment7.target=void\ teleport(int,\ int)
comment7.text=\ the\ function\ teleports\ the\ rover\ to\ the\ given\ coordinates\ (xMove,\ yMove)\ and\ plays\ a\ cool\ sound\r\n\ \ @param\ xMove\ \ x\ coordinate\ the\ rover\ will\ teleport\ to\r\n\ \ @param\ yMove\ \ y\ coordinate\ the\ rover\ will\ teleport\ to\r\n
comment8.params=rotateAmount
comment8.target=void\ rotate(int)
comment8.text=\ the\ function\ rotates\ the\ rover\ (rotateAmount)\r\n\ @\ param\ rotateAmount\ \ the\ amount\ that\ the\ rover\ will\ rotate\ in\ the\ 8\ (0-7)\ direction\ system\r\n
comment9.params=moveDistance
comment9.target=void\ move(int)
comment9.text=\ the\ function\ moves\ the\ rover\ a\ certain\ distance\ specified\ by\ moveDistance\ if\ the\ rover\ is\ alive\r\n\ @param\ moveDistance\ \ the\ distance\ the\ rover\ will\ move\ in\ a\ given\ direction\ \r\n
numComments=21
